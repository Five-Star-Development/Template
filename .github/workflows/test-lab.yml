name: Android CI with Firebase Test Lab

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  firebase-test-lab:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Build test APK
        run: ./gradlew assembleDebugAndroidTest

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Run Firebase Test Lab tests
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app app/build/outputs/apk/debug/app-debug.apk \
            --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
            --device model=Pixel2,version=28,locale=de,orientation=portrait \
            --device model=Pixel3,version=29,locale=de,orientation=portrait \
            --device model=Pixel4,version=30,locale=de,orientation=portrait \
            --device model=Pixel6,version=31,locale=de,orientation=portrait \
            --timeout 5m \
            --format=json \
            --verbosity=info

      - name: Show test results
        if: always()
        run: |
          if [ -f test-results.json ]; then
            echo "=== TEST RESULTS ==="
            cat test-results.json | jq '.'
          fi

#      - name: Download test results
#        if: always()
#        run: |
#          mkdir -p test-results
#          gsutil -m cp -r gs://${{ secrets.FIREBASE_TEST_RESULTS_BUCKET }}/test-results-* test-results/ || echo "No test results to download"
#
#      - name: Upload test results
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: firebase-test-results
#          path: test-results/

  firebase-test-distribution:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: build release
        run: ./gradlew assembleRelease

      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.GCLOUD_KEY }}
          groups: testers
          file: app/build/outputs/apk/release/app-release-unsigned.apk