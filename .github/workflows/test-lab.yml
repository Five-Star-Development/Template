name: Android CI with Firebase Test Lab

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Build Debug Android Test APK
        run: ./gradlew assembleDebugAndroidTest

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:

          service_account_key_file: ${{ secrets.GCLOUD_KEY }}
          project_id: templateproject-14cb6

      - name: Run Firebase Test Lab tests
        run: |
          
          # Beispiel für ein Robo-Test auf einem generischen Gerät:
          # gcloud firebase test android run \
          #   --type robo \
          #   --app app/build/outputs/apk/debug/app-debug.apk \
          #   --device model=Pixel2,version=29,locale=en,orientation=portrait

          gcloud firebase test android run \
            --type instrumentation \
            --app app/build/outputs/apk/debug/app-debug.apk \
            --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
            --device model=Pixel2,version=29,locale=en,orientation=portrait \
            --timeout 5m # Optional: Erhöhen Sie das Timeout für längere Tests

      - name: Download test results
        if: always()
        run: |
          gsutil cp -r "gs://templateproject-14cb6.com/test_results/*" ./test_results_download/

      - name: Upload test results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test_results_download/
          retention-days: 5